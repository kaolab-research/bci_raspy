# Use paths_to_copy to indicate which relative paths to copy within the raspy directory from source to data_folder
paths_to_copy:
  - ./main
  - ./modules/kf_util.py
signals:
  timer_tick_time_ns:
    shape: 1
    dtype: int64
  
  decoded_pos:
    shape: 2
    dtype: float32

  target_pos:
    shape: 2
    dtype: float32
    
  target_size:
    shape: 2
    dtype: float32

  state_task:
    shape: 1 # use "shape: ()"?
    dtype: int8

  game_state:
    shape: 1 # use "shape: ()"?
    dtype: int8
  
  # warning: this is a bipartite buffer.
  # indexing starts at ().shape[0] // 2
  eegbuffersignal:
    shape: (10000, 66)
    dtype: float32
  
  databuffer:
    shape: (10000, 66)
    dtype: float32
  
  # Index within eegbuffersignal to put new data,
  # NOT position of most recent data. Subtract 1 for most recent
  # Should never be less than half of eegbuffersignal.shape[0]
  # use int32 if needed
  eegbufferindex:
    shape: 1
    dtype: int16
    
  v_decoded:
    shape: 2
    dtype: float32
  
  # can be class probabilities or velocity
  decoder_output:
    shape: 5
    dtype: float32
  
  # signals needed for decoder_hidden and kf_clda
  kf_state:
    shape: (7,)
    dtype: float32
  kf_inf_state:
    shape: (7,)
    dtype: float32
  decoder_h:
    shape: 16 # at least (eegnet_hidden,) ***
    dtype: float32
  # kf parameters
  kf_R:
    shape: (7, 7)
    dtype: float64
  kf_S:
    shape: (16, 7) # ***
    dtype: float64
  kf_T:
    shape: (16, 16) # ***
    dtype: float64
  kf_Tinv:
    shape: (16, 16) # ***
    dtype: float64
  kf_EBS:
    shape: 1
    dtype: float64
  kf_C:
    shape: (16, 7) # ***
    dtype: float64
  kf_Q:
    shape: (16, 16) # ***
    dtype: float64
  kf_Qinv:
    shape: (16, 16) # ***
    dtype: float64
  kf_S_k:
    shape: (7, 7)
    dtype: float64
  kf_K_k:
    shape: (7, 16) # ***
    dtype: float64
  kf_M1:
    shape: (7, 7)
    dtype: float64
  kf_M2:
    shape: (7, 16) # ***
    dtype: float64
  kf_effective_vel:
    shape: (2,)
    dtype: float32
  kf_ole_rlud:
    shape: (4,)
    dtype: float32
  # other relevant kf variables
  rluds_output:
    shape: (5,)
    dtype: float32
  kf_update_flag:
    shape: 1
    dtype: int8
  allow_kf_adapt:
    shape: 1
    dtype: bool
  allow_kf_sync:
    shape: 1
    dtype: bool

  shared_last_layer_w:
    shape: (4, 48)
    dtype: float32
  shared_last_layer_b:
    shape: 4
    dtype: float32
  updated_weights_ready:
    shape: 1
    dtype: bool
  reload:
    shape: 1
    dtype: bool

  numEEGSamples:
    shape: 1
    dtype: int16
    
  totalValidEEGSamples:
    shape: 1
    dtype: int64
  
  # task variables to log
  sessionLength:
    shape: 1
    dtype: float32
  activeLength:
    shape: 1
    dtype: float32
  cursorVel:
    shape: 2
    dtype: float32
  ignoreWrongTarget:
    shape: 1
    dtype: bool
  cursorMoveInCorretDirectionOnly:
    shape: 1
    dtype: bool
  assistValue:
    shape: 1
    dtype: float32
  assistMode:
    shape: 2
    dtype: int8
  softmaxThres:
    shape: 1
    dtype: float32
  holdTimeThres:
    shape: 1
    dtype: float32
  kfCopilotAlpha:
    shape: 1
    dtype: float32
  hitRate:
    shape: 1
    dtype: float32
  missRate:
    shape: 1
    dtype: float32
  timeoutRate:
    shape: 1
    dtype: float32
  trialCount:
    shape: 1
    dtype: float32
  render_angle:
    shape: 1
    dtype: float32
  numCompletedBlocks:
    shape: 1
    dtype: int32
  enableKfSyncInternal:
    shape: 1
    dtype: int8
  
  # gaze signals
  gaze_buffer:
    shape: (600, 32)
    dtype: float64
  gaze_buffer_idx:
    shape: 1
    dtype: int16

# I think yaml has similar functionality with ampersand and asterisk
# The group_params ALWAYS override the individual module params
group_params:
  dt_group:
    # the params with these keys for these modules are overwritten
    modules:
      - timer
      - kf_clda
      - SJ_4_directions
    params:
      # &dt reference is NECESSARY, otherwise it will be a silent bug in SJ-4-directions/kf-4-directions.
      dt: &dt_ 50000 # in microseconds
    

modules:
  # WARNING: make sure you have an exit condition when using loop: False
  # Note: it is possible for KeyboardInterrupt to be sufficient.
  logger_disk:
    constructor: True
    destructor: False
    loop: False
    params:
      #save_path: ./data/
      save_path: /home/necl-eeg/data/raspy/
      connections:
        local: # connection_name. should only have 1. Not sure why this level is here.
          task: # stream_name
            IP: '127.0.0.1'
            PORT: 7701
          eeg:
            IP: '127.0.0.1'
            PORT: 7702
          gaze:
            IP: '127.0.0.1'
            PORT: 7703

  timer:
    constructor: True
    destructor: True
    sync:
      #- kf_4_directions
      - logger
    trigger: True
    out:
      - timer_tick_time_ns
    params:
      timer_type: hybrid # pygame or sleep
      #dt: 20000 # in microseconds.
      verbose: True

  recv_gaze_buffer:
    constructor: True
    destructor: True
    sync:
      - timer
    out:
      - gaze_buffer
      - gaze_buffer_idx
    trigger: False
    params:
      IP: auto #10.0.1.25
      PORT: 7780

  UpdateEEG:
    constructor: True
    destructor: True
    sync:
      - timer
    out:
      - eegbuffersignal
      - eegbufferindex
      - numEEGSamples
      - totalValidEEGSamples
    trigger: False
    params:
      IP: '127.0.0.1'
      PORT: 7779
  
  filterEEG:
    constructor: True
    destructor: False
    sync:
      - UpdateEEG
    in:
      - eegbuffersignal
      - eegbufferindex
      - numEEGSamples
      - totalValidEEGSamples
    out:
      - databuffer
      
  decoder_hidden:
    constructor: True
    sync:
      - filterEEG
    in:
      - eegbuffersignal
      - databuffer
      - eegbufferindex
      - state_task
      - reload
      - shared_last_layer_w
      - shared_last_layer_b
      - updated_weights_ready
    out:
      - decoder_output
      - decoder_h
      - reload
    params:
      path: /home/necl-eeg/data/raspy/trained_models/foo # fold 0 # ***
      fold: 0 # ***

      data_preprocessor:
        online_status: online
        normalizer_type: welfords
  
  kf_clda:
    constructor: True
    destructor: True
    sync:
      #- filterEEG
      - decoder_hidden
    in:
      - decoder_h
      - state_task
      - decoded_pos
      - target_pos
      - decoder_output
      - allow_kf_adapt
      - allow_kf_sync
    out:
      - kf_state
      - kf_inf_state
      - rluds_output
      - kf_update_flag
      # kf parameters
      - kf_R
      - kf_S
      - kf_T
      - kf_Tinv
      - kf_EBS
      - kf_C
      - kf_Q
      - kf_Qinv
      - kf_S_k
      - kf_K_k
      - kf_M1
      - kf_M2
      - kf_effective_vel
      - kf_ole_rlud
    params:
      #dt: 20000 # in microseconds
      init_EBS_seconds: prev # 1.0 # steadystate # in seconds, or steadystate, or prev (loads previous EBS)
      half_life: 2000.0 # 360.0 # in seconds
      kf_init_path: /home/necl-eeg/data/raspy/foo/final_kf.npz # ***
      RLUDs_idx: [1, 0, 2, 3]
      continuous_update: False # whether to continuously update M1 and M2 (for decoding)
      A_gain: 0.5
      inf_state_delay: 0.0 # In seconds, rounded down each dt_s.
      refit_mode: split

  SJ_4_directions:
    name: kf_4_directions
    constructor: True
    destructor: True
    sync:
      - kf_clda
    in:
      - eegbufferindex
      - state_task
      - decoder_output
      - kf_state
    out:
      - decoded_pos
      - target_pos
      - target_size
      - game_state
      - allow_kf_adapt
      - allow_kf_sync
      - kf_ole_rlud
      # task parameters
      - sessionLength
      - activeLength
      - cursorVel
      - ignoreWrongTarget
      - cursorMoveInCorretDirectionOnly
      - assistValue
      - assistMode
      - softmaxThres
      - holdTimeThres
      - kfCopilotAlpha
      - hitRate
      - missRate
      - timeoutRate
      - trialCount
      - render_angle
      - numCompletedBlocks
      - enableKfSyncInternal
    params:
      sessionLength: 600 # seconds
      syncLength: 300 # seconds
      waitIntegerBlocks: True
      fullScreen: False
      screenSize: [700,700] # w,h
      objScale: 0.001 # 1/1000
      cursorRadius: 10
      cursorVel: [0.012, 0.012] # max is 1 (0~1)
      ignoreWrongTarget: False
      cursorMoveInCorretDirectionOnly: False
      useRandomTargetPos: False
      
      centerIn: True
      enforceCenter: reset
      resetCursorPos: False

      randomTargetPosRadius: -1 # -1 means no range for radius
      styleChange: True
      styleChangeBallSize: 1.0
      styleChangeCursorSize: [0.1, 0.1]
      targetWrongColor: [60,60,60]
      

      # using cm board
      useCmBoard: False
      cmBoardDetail:
        fullSizeScreen: False
        gameBoardSize: [20,20] # cm by cm (x,y)
        actualScreenSize: [33,21] # cm by cm (x,y)
      useCircleTargets: True
      # targetsInfo:  # max is 1 (pos, size)
      #   left : [[-0.8, 0  ], [0.6, 0.6]]   #   0 : left, #8cm away 6by6cm
      #   right: [[ 0.8, 0  ], [0.6, 0.6]]   #   1 : right,
      #   up   : [[ 0  , 0.8], [0.6, 0.6]]   #   2 : up,
      #   down : [[ 0  ,-0.8], [0.6, 0.6]]   #   3 : down,
      #   LU : [[ -0.5657, 0.5657], [0.6, 0.6]]   #   0 : left,
      #   LD : [[ -0.5657, -0.5657], [0.6, 0.6]]   #   1 : right,
      #   RU : [[ 0.5657, 0.5657], [0.6, 0.6]]   #   2 : up,
      #   RD : [[ 0.5657,-0.5657], [0.6, 0.6]]   #   3 : down,
      targetsInfo:  # max is 1 (pos, size)
        left : [[-0.7, 0  ], [0.6, 0.6]]   #   0 : left, #8cm away 6by6cm
        right: [[ 0.7, 0  ], [0.6, 0.6]]   #   1 : right,
        up   : [[ 0  , 0.7], [0.6, 0.6]]   #   2 : up,
        down : [[ 0  ,-0.7], [0.6, 0.6]]   #   3 : down,
        LU : [[ -0.4950, 0.4950], [0.6, 0.6]]   #   0 : left,
        LD : [[ -0.4950, -0.4950], [0.6, 0.6]]   #   1 : right,
        RU : [[ 0.4950, 0.4950], [0.6, 0.6]]   #   2 : up,
        RD : [[ 0.4950,-0.4950], [0.6, 0.6]]   #   3 : down,
        # still : "still"                       #   4 : still state (not stop state)
      defaultTargetSize: [0.6, 0.6]

      target2state_task: # what number should state task use when it is using target
        left : 0
        right: 1
        up   : 2
        down : 3
        still : 4
        LU: 5
        LD: 6
        RU: 7
        RD: 8
        ~ : -1 # None (when there is no target. [i.e stop] assign some number to state_task = -1)
      decodedVel:  # max is 1
        0 : [-1. ,  0]   #   0 : left
        1 : [ 1. ,  0]   #   1 : right
        2 : [ 0. ,  1]   #   2 : up
        3 : [ 0. , -1]   #   3 : down
        4 : [ 0. ,  0]   #   4 : still
      holdTimeThres: 0.5 # seconds
      graceTimeThres: 0.0 # seconds
      softmaxThres: 0.5
      assist: 0.0
      assistMode: n2 # e for efficient, n for natural, b for bigger axis first, n2 for two direction
      inactiveLength: 0 # seconds
      delayedLength: 0
      activeLength: 16 #20 # seconds
      calibrationLength: 5
      skipFirstNtrials: 4
      numInitialEvaluationBlocks: 1 # number of blocks until sync is allowed. no sync during calibration.
      showTextMetrics: ~ # 'b' for bitrate, 'a' for accuracy, else shows default
      showCountDown: True
      softmaxStyle : normal
      showSoftmax: False
      showHeatmap: False
      showStats: False
      showColorCursor: True
      showPredictedTarget: True
      showAllTarget: False
      hideCom: True
      hideMass: True
      yamlName : models/kf-8-directions-gaze.yaml
      #copilot_path : SJtools/copilot/models/keep/now-pou33z92l0/best_model #11-09 unpeaky softmax, center-out-8
      copilot_kf_state: True
      kfCopilotAlpha : 1.0 # 1: kf, 0: copilot 
      enableKfSync: True # enables Kf to sync every trial
      enableKfAdapt: True # enables Kf to adapt every tick
      enableKfAdaptDelay: 1.0 # 1 second delay until Kf starts adapting every trial
      dt: *dt_

  logger:
    constructor: True
    destructor: True
    sync:
      - SJ_4_directions
    in:
      - timer_tick_time_ns
      - eegbuffersignal
      - databuffer
      - eegbufferindex
      - state_task
      - decoder_output
      - decoded_pos
      - target_pos
      - target_size
      - game_state
      - kf_state
      - kf_inf_state
      - kf_update_flag
      - allow_kf_adapt
      - allow_kf_sync
      - decoder_h
      # kf parameters
      - kf_R
      - kf_S
      - kf_T
      - kf_Tinv
      - kf_EBS
      - kf_C
      - kf_Q
      - kf_Qinv
      - kf_S_k
      - kf_K_k
      - kf_M1
      - kf_M2
      - kf_effective_vel
      - kf_ole_rlud
      # task parameters
      - sessionLength
      - activeLength
      - cursorVel
      - ignoreWrongTarget
      - cursorMoveInCorretDirectionOnly
      - assistValue
      - assistMode
      - softmaxThres
      - holdTimeThres
      - kfCopilotAlpha
      - hitRate
      - missRate
      - timeoutRate
      - trialCount
      - render_angle
      - numCompletedBlocks
      - enableKfSyncInternal
      # gaze
      - gaze_buffer
      - gaze_buffer_idx
    params:
      log:
        task:
          signals:
            - timer_tick_time_ns
            - state_task
            - decoder_output
            - decoded_pos
            - target_pos
            - target_size
            - game_state
            - kf_state
            - kf_inf_state
            - kf_update_flag
            - allow_kf_adapt
            - allow_kf_sync
            - decoder_h
            # kf parameters
            - kf_R
            - kf_S
            - kf_T
            - kf_Tinv
            - kf_EBS
            - kf_C
            - kf_Q
            - kf_Qinv
            - kf_S_k
            - kf_K_k
            - kf_M1
            - kf_M2
            - kf_effective_vel
            - kf_ole_rlud
            # task parameters
            - sessionLength
            - activeLength
            - cursorVel
            - ignoreWrongTarget
            - cursorMoveInCorretDirectionOnly
            - assistValue
            - assistMode
            - softmaxThres
            - holdTimeThres
            - kfCopilotAlpha
            - hitRate
            - missRate
            - timeoutRate
            - trialCount
            - render_angle
            - numCompletedBlocks
            - enableKfSyncInternal
        eeg:
          index: eegbufferindex
          buffers:
            - eegbuffersignal
            - databuffer
        gaze:
          index: gaze_buffer_idx
          buffers:
            - gaze_buffer
      connections:
        local:
          task:
            IP: '127.0.0.1'
            PORT: 7701
          eeg:
            IP: '127.0.0.1'
            PORT: 7702
          gaze:
            IP: '127.0.0.1'
            PORT: 7703
std updated: 5.0
